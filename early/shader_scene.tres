[gd_resource type="ShaderMaterial" load_steps=6 format=3 uid="uid://ckw4rdhnmudjf"]

[sub_resource type="Shader" id="Shader_ygjr6"]
code = "shader_type spatial;
render_mode specular_toon;

uniform sampler2D noise;
uniform sampler2D normal_map;
uniform float height_scale = 0.5;
uniform float time_speed = 0.5;
varying vec2 tex_position;

float wave(vec2 position){
	position += texture(noise, position / 10.0).x * 2.0 - 1.0;
	vec2 wv = 1.0 - abs(sin(position));
	return pow(1.0 - pow(wv.x * wv.y, 0.65), 4.0) * height_scale;
	//return pow(1.0 - pow(wv.x * wv.y, 0.65), 4.0);
}

float height(vec2 position, float time){
	float d = wave((position + time) * 0.4) * 0.3;
	d += wave((position - time) * 0.3) * 0.3;
	d += wave((position + time) * 0.5) * 0.2;
	d += wave((position - time) * 0.6) * 0.2;
	return d;
}

void vertex(){
	tex_position = VERTEX.xz / 2.0 + 0.5;
	
	vec2 pos = VERTEX.xz;
	float k = height(pos * height_scale, TIME * time_speed);
	VERTEX.y = k;
	NORMAL = normalize(vec3(k - height(pos + vec2(0.1, 0.0), TIME * time_speed), 0.1, k - height(pos + vec2(0.0, 0.1), TIME * time_speed)));
}

void fragment() {
	
	vec4 col = texture(noise, UV);
	NORMAL_MAP = texture(normal_map, tex_position).xyz;
	//ALBEDO = col.xyz
	
	float fresnel = sqrt(1.0 - dot(NORMAL, VIEW));
	
	RIM = 0.2;;
	METALLIC = 0.0;
	ROUGHNESS = 0.01 * (1.0 - fresnel);
	ALBEDO = vec3(0.01, 0.03, 0.05) + (0.1 * fresnel);
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_h6egx"]
noise_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_e15qt"]
seamless = true
noise = SubResource("FastNoiseLite_h6egx")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_x8iw0"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_j50ew"]
seamless = true
as_normal_map = true
noise = SubResource("FastNoiseLite_x8iw0")

[resource]
render_priority = 0
shader = SubResource("Shader_ygjr6")
shader_parameter/height_scale = 0.5
shader_parameter/time_speed = 0.125
shader_parameter/noise = SubResource("NoiseTexture2D_e15qt")
shader_parameter/normal_map = SubResource("NoiseTexture2D_j50ew")
